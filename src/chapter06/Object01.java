package chapter06;

//클래스 외부 : 패키지,import,외부 클래스

public class Object01 {

	public static void main(String[] args) {
//		절차 지향 프로그램 : c(고성능)
//			장점 : 성능이 매우 우수하다 Ex:OS(Windows/Linux/Unix)
//			단점 : 프로그래밍 하기 어렵다. 유지 보수 하기 어렵다.
//		객체지향 프로그램 : java,c++
//			장점 : 프로그래밍하기 쉽다.모든것들은 객체화가 가능하다. 코드가 간결해 진다.
//			      문제가 생겼을때 유지보수가 쉽다
//			      문제가 생긴 객체만 수정이 가능하다
//			      완성된 프로그램은 가각의 객체를 조합해서 완성.
//			단점 : 성능이 절차 지향형보다 느리다
		
//		class : 객체를 생성하기 위한 틀
//		Object : class를 기준으로 생성된 메모리에서 실행되는 프로그램.
		
		
//		class 외부로 올수 있는 3가지 :
//			- 패키지 : 클래스를 조직화하는 폴더
//			- import : 동일한 패키지에 존재하지 않는 클래스는 넣어줘야한다
//			- 외부클래스 : 
		
//		class 내부로 올수 있는 4가지
//			-필드 (맴버변수) : 클래스블럭에 선언된 변수를 필드라 호칭 ,메소드내에서 선언한 변수 지역변수
//			- 메소드 (맴버메소드) : 함수를 객체지향 언어에서는 메소드라 호칭함
//		 		void main(){
//				}
//			- 생성자 : 객체를 생성할때 필드의 값을 초기화 시켜주는 작업
//				- 리턴 타입이 있으면 안됨
//				- 객체이름과 동일한 이름의 메소드
//		내부 클래스 : 클래스 내부의 클래스(inner class)
	}

}
